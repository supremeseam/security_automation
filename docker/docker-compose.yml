version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: automation-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-changeme}
      MYSQL_DATABASE: ${DB_NAME:-automation_ui}
      MYSQL_USER: ${DB_USER:-dbadmin}
      MYSQL_PASSWORD: ${DB_PASSWORD:-changeme}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../app/database_setup.sql:/docker-entrypoint-initdb.d/database_setup.sql
    networks:
      - automation-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-changeme}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Web Application
  web:
    build:
      context: ../app
      dockerfile: Dockerfile
    container_name: automation-web
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-automation_ui}
      DB_USER: ${DB_USER:-dbadmin}
      DB_PASSWORD: ${DB_PASSWORD:-changeme}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - automation-network
    volumes:
      # Mount for development (optional - comment out for production)
      - ../app:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:
    driver: local

networks:
  automation-network:
    driver: bridge
